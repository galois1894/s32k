   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"bl.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.WDOG_disable,"ax",%progbits
  21              		.align	2
  22              		.global	WDOG_disable
  23              		.thumb
  24              		.thumb_func
  26              	WDOG_disable:
  27              	.LFB0:
  28              		.file 1 "../bl/bl.c"
   1:../bl/bl.c    **** /*
   2:../bl/bl.c    ****  * bl.c
   3:../bl/bl.c    ****  *
   4:../bl/bl.c    ****  *  Created on: 2017年10月10日
   5:../bl/bl.c    ****  *      Author: houxd
   6:../bl/bl.c    ****  */
   7:../bl/bl.c    **** 
   8:../bl/bl.c    **** #include "bl.h"
   9:../bl/bl.c    **** #include <stdint.h>
  10:../bl/bl.c    **** #include "S32K144.h" /* include peripheral declarations S32K144 */
  11:../bl/bl.c    **** #include <stdio.h>
  12:../bl/bl.c    **** #include "SPI_MSD0_Driver.h"
  13:../bl/bl.c    **** #include "clocks_and_modes.h"
  14:../bl/bl.c    **** #include "FlexCAN.h"
  15:../bl/bl.c    **** #include "timelib.h"
  16:../bl/bl.c    **** 
  17:../bl/bl.c    **** void WDOG_disable(void) {
  29              		.loc 1 17 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  18:../bl/bl.c    **** 	WDOG->CNT = 0xD928C520; /*Unlock watchdog*/
  39              		.loc 1 18 0
  40 0004 074B     		ldr	r3, .L2
  41 0006 084A     		ldr	r2, .L2+4
  42 0008 5A60     		str	r2, [r3, #4]
  19:../bl/bl.c    **** 	WDOG->TOVAL = 0x0000FFFF; /*Maximum timeout value*/
  43              		.loc 1 19 0
  44 000a 064B     		ldr	r3, .L2
  45 000c 4FF6FF72 		movw	r2, #65535
  46 0010 9A60     		str	r2, [r3, #8]
  20:../bl/bl.c    **** 	WDOG->CS = 0x00002100; /*Disable watchdog*/
  47              		.loc 1 20 0
  48 0012 044B     		ldr	r3, .L2
  49 0014 4FF40452 		mov	r2, #8448
  50 0018 1A60     		str	r2, [r3]
  21:../bl/bl.c    **** }
  51              		.loc 1 21 0
  52 001a BD46     		mov	sp, r7
  53              		.cfi_def_cfa_register 13
  54              		@ sp needed
  55 001c 5DF8047B 		ldr	r7, [sp], #4
  56              		.cfi_restore 7
  57              		.cfi_def_cfa_offset 0
  58 0020 7047     		bx	lr
  59              	.L3:
  60 0022 00BF     		.align	2
  61              	.L2:
  62 0024 00200540 		.word	1074077696
  63 0028 20C528D9 		.word	-651639520
  64              		.cfi_endproc
  65              	.LFE0:
  67              		.section	.text.NVIC_init_IRQs,"ax",%progbits
  68              		.align	2
  69              		.global	NVIC_init_IRQs
  70              		.thumb
  71              		.thumb_func
  73              	NVIC_init_IRQs:
  74              	.LFB1:
  22:../bl/bl.c    **** 
  23:../bl/bl.c    **** void NVIC_init_IRQs (void) {
  75              		.loc 1 23 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 1, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  80 0000 80B4     		push	{r7}
  81              		.cfi_def_cfa_offset 4
  82              		.cfi_offset 7, -4
  83 0002 00AF     		add	r7, sp, #0
  84              		.cfi_def_cfa_register 7
  24:../bl/bl.c    **** 	S32_NVIC->ICPR[LPUART0_RxTx_IRQn/32] = 1 << (LPUART0_RxTx_IRQn % 32); /* IRQ48-LPIT0 ch0: clr any 
  85              		.loc 1 24 0
  86 0004 134B     		ldr	r3, .L5
  87 0006 4FF00042 		mov	r2, #-2147483648
  88 000a C3F88021 		str	r2, [r3, #384]
  25:../bl/bl.c    **** 	S32_NVIC->ISER[LPUART0_RxTx_IRQn/32] = 1 << (LPUART0_RxTx_IRQn % 32); /* IRQ48-LPIT0 ch0: enable I
  89              		.loc 1 25 0
  90 000e 114B     		ldr	r3, .L5
  91 0010 4FF00042 		mov	r2, #-2147483648
  92 0014 1A60     		str	r2, [r3]
  26:../bl/bl.c    **** 	S32_NVIC->IP[LPUART0_RxTx_IRQn] =0x05; /* IRQ48-LPIT0 ch0: priority 10 of 0-15*/
  93              		.loc 1 26 0
  94 0016 0F4B     		ldr	r3, .L5
  95 0018 0522     		movs	r2, #5
  96 001a 83F81F23 		strb	r2, [r3, #799]
  27:../bl/bl.c    **** 
  28:../bl/bl.c    **** 	S32_NVIC->ICPR[LPUART1_RxTx_IRQn/32] = 1 << (LPUART1_RxTx_IRQn % 32); /* IRQ48-LPIT0 ch0: clr any 
  97              		.loc 1 28 0
  98 001e 0D4B     		ldr	r3, .L5
  99 0020 0222     		movs	r2, #2
 100 0022 C3F88421 		str	r2, [r3, #388]
  29:../bl/bl.c    **** 	S32_NVIC->ISER[LPUART1_RxTx_IRQn/32] = 1 << (LPUART1_RxTx_IRQn % 32); /* IRQ48-LPIT0 ch0: enable I
 101              		.loc 1 29 0
 102 0026 0B4B     		ldr	r3, .L5
 103 0028 0222     		movs	r2, #2
 104 002a 5A60     		str	r2, [r3, #4]
  30:../bl/bl.c    **** 	S32_NVIC->IP[LPUART1_RxTx_IRQn] =0x05; /* IRQ48-LPIT0 ch0: priority 10 of 0-15*/
 105              		.loc 1 30 0
 106 002c 094B     		ldr	r3, .L5
 107 002e 0522     		movs	r2, #5
 108 0030 83F82123 		strb	r2, [r3, #801]
  31:../bl/bl.c    **** 
  32:../bl/bl.c    **** 	S32_NVIC->ICPR[LPUART1_RxTx_IRQn/32] = 1 << (LPUART2_RxTx_IRQn % 32); /* IRQ48-LPIT0 ch0: clr any 
 109              		.loc 1 32 0
 110 0034 074B     		ldr	r3, .L5
 111 0036 0822     		movs	r2, #8
 112 0038 C3F88421 		str	r2, [r3, #388]
  33:../bl/bl.c    **** 	S32_NVIC->ISER[LPUART1_RxTx_IRQn/32] = 1 << (LPUART2_RxTx_IRQn % 32); /* IRQ48-LPIT0 ch0: enable I
 113              		.loc 1 33 0
 114 003c 054B     		ldr	r3, .L5
 115 003e 0822     		movs	r2, #8
 116 0040 5A60     		str	r2, [r3, #4]
  34:../bl/bl.c    **** 	S32_NVIC->IP[LPUART2_RxTx_IRQn] =0x05; /* IRQ48-LPIT0 ch0: priority 10 of 0-15*/
 117              		.loc 1 34 0
 118 0042 044B     		ldr	r3, .L5
 119 0044 0522     		movs	r2, #5
 120 0046 83F82323 		strb	r2, [r3, #803]
  35:../bl/bl.c    **** 
  36:../bl/bl.c    **** //	  S32_NVIC->ICPR[1] = 1 << (48 % 32);  /* IRQ48-LPIT0 ch0: clr any pending IRQ*/
  37:../bl/bl.c    **** //	  S32_NVIC->ISER[1] = 1 << (48 % 32);  /* IRQ48-LPIT0 ch0: enable IRQ */
  38:../bl/bl.c    **** //	  S32_NVIC->IP[48] = 0xA;              /* IRQ48-LPIT0 ch0: priority 10 of 0-15*/
  39:../bl/bl.c    **** }
 121              		.loc 1 39 0
 122 004a BD46     		mov	sp, r7
 123              		.cfi_def_cfa_register 13
 124              		@ sp needed
 125 004c 5DF8047B 		ldr	r7, [sp], #4
 126              		.cfi_restore 7
 127              		.cfi_def_cfa_offset 0
 128 0050 7047     		bx	lr
 129              	.L6:
 130 0052 00BF     		.align	2
 131              	.L5:
 132 0054 00E100E0 		.word	-536813312
 133              		.cfi_endproc
 134              	.LFE1:
 136              		.section	.text.LPIT0_init,"ax",%progbits
 137              		.align	2
 138              		.global	LPIT0_init
 139              		.thumb
 140              		.thumb_func
 142              	LPIT0_init:
 143              	.LFB2:
  40:../bl/bl.c    **** 
  41:../bl/bl.c    **** void LPIT0_init (void) {
 144              		.loc 1 41 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 1, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 149 0000 80B4     		push	{r7}
 150              		.cfi_def_cfa_offset 4
 151              		.cfi_offset 7, -4
 152 0002 00AF     		add	r7, sp, #0
 153              		.cfi_def_cfa_register 7
  42:../bl/bl.c    ****   PCC->PCCn[PCC_LPIT_INDEX] = PCC_PCCn_PCS(6);    /* Clock Src = 6 (SPLL2_DIV2_CLK)*/
 154              		.loc 1 42 0
 155 0004 0E4B     		ldr	r3, .L8
 156 0006 4FF0C062 		mov	r2, #100663296
 157 000a C3F8DC20 		str	r2, [r3, #220]
  43:../bl/bl.c    ****   PCC->PCCn[PCC_LPIT_INDEX] |= PCC_PCCn_CGC_MASK; /* Enable clk to LPIT0 regs */
 158              		.loc 1 43 0
 159 000e 0C4A     		ldr	r2, .L8
 160 0010 0B4B     		ldr	r3, .L8
 161 0012 D3F8DC30 		ldr	r3, [r3, #220]
 162 0016 43F08043 		orr	r3, r3, #1073741824
 163 001a C2F8DC30 		str	r3, [r2, #220]
  44:../bl/bl.c    ****   LPIT0->MCR = 0x00000001;    /* DBG_EN-0: Timer chans stop in Debug mode */
 164              		.loc 1 44 0
 165 001e 094B     		ldr	r3, .L8+4
 166 0020 0122     		movs	r2, #1
 167 0022 9A60     		str	r2, [r3, #8]
  45:../bl/bl.c    ****                               /* DOZE_EN=0: Timer chans are stopped in DOZE mode */
  46:../bl/bl.c    ****                               /* SW_RST=0: SW reset does not reset timer chans, regs */
  47:../bl/bl.c    ****                            /* M_CEN=1: enable module clk (allows writing other LPIT0 regs)*/
  48:../bl/bl.c    ****   LPIT0->MIER = 0x00000001;   /* TIE0=1: Timer Interrupt Enabled fot Chan 0 */
 168              		.loc 1 48 0
 169 0024 074B     		ldr	r3, .L8+4
 170 0026 0122     		movs	r2, #1
 171 0028 1A61     		str	r2, [r3, #16]
  49:../bl/bl.c    ****   LPIT0->TMR[0].TVAL = 40000;//1m tick 000;    /* Chan 0 Timeout period: 40M clocks */
 172              		.loc 1 49 0
 173 002a 064B     		ldr	r3, .L8+4
 174 002c 49F64042 		movw	r2, #40000
 175 0030 1A62     		str	r2, [r3, #32]
  50:../bl/bl.c    ****   LPIT0->TMR[0].TCTRL = 0x00000001; /* T_EN=1: Timer channel is enabled */
 176              		.loc 1 50 0
 177 0032 044B     		ldr	r3, .L8+4
 178 0034 0122     		movs	r2, #1
 179 0036 9A62     		str	r2, [r3, #40]
  51:../bl/bl.c    ****                               /* CHAIN=0: channel chaining is disabled */
  52:../bl/bl.c    ****                               /* MODE=0: 32 periodic counter mode */
  53:../bl/bl.c    ****                               /* TSOT=0: Timer decrements immediately based on restart */
  54:../bl/bl.c    ****                               /* TSOI=0: Timer does not stop after timeout */
  55:../bl/bl.c    ****                               /* TROT=0 Timer will not reload on trigger */
  56:../bl/bl.c    ****                               /* TRG_SRC=0: External trigger soruce */
  57:../bl/bl.c    ****                               /* TRG_SEL=0: Timer chan 0 trigger source is selected*/
  58:../bl/bl.c    **** }
 180              		.loc 1 58 0
 181 0038 BD46     		mov	sp, r7
 182              		.cfi_def_cfa_register 13
 183              		@ sp needed
 184 003a 5DF8047B 		ldr	r7, [sp], #4
 185              		.cfi_restore 7
 186              		.cfi_def_cfa_offset 0
 187 003e 7047     		bx	lr
 188              	.L9:
 189              		.align	2
 190              	.L8:
 191 0040 00500640 		.word	1074155520
 192 0044 00700340 		.word	1073967104
 193              		.cfi_endproc
 194              	.LFE2:
 196              		.section	.text.PORT_init,"ax",%progbits
 197              		.align	2
 198              		.global	PORT_init
 199              		.thumb
 200              		.thumb_func
 202              	PORT_init:
 203              	.LFB3:
  59:../bl/bl.c    **** 
  60:../bl/bl.c    **** extern void nic_io_init();
  61:../bl/bl.c    **** void PORT_init (void) {
 204              		.loc 1 61 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 0000 80B5     		push	{r7, lr}
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 7, -8
 211              		.cfi_offset 14, -4
 212 0002 00AF     		add	r7, sp, #0
 213              		.cfi_def_cfa_register 7
  62:../bl/bl.c    **** 	//PD8 for buzzer
  63:../bl/bl.c    **** 	PCC->PCCn[PCC_PORTD_INDEX] = PCC_PCCn_CGC_MASK; /* Enable clock for PORT D */
 214              		.loc 1 63 0
 215 0004 A54B     		ldr	r3, .L11
 216 0006 4FF08042 		mov	r2, #1073741824
 217 000a C3F83021 		str	r2, [r3, #304]
  64:../bl/bl.c    **** 	PTD->PDDR |= 1 << 8; 					/* Port D8:  Data Direction= output */
 218              		.loc 1 64 0
 219 000e A44A     		ldr	r2, .L11+4
 220 0010 A34B     		ldr	r3, .L11+4
 221 0012 5B69     		ldr	r3, [r3, #20]
 222 0014 43F48073 		orr	r3, r3, #256
 223 0018 5361     		str	r3, [r2, #20]
  65:../bl/bl.c    **** 	PORTD->PCR[8] |= PORT_PCR_MUX(1);		 /* Port D8:  MUX = ALT1, GPIO (to blue LED on EVB) */
 224              		.loc 1 65 0
 225 001a A24A     		ldr	r2, .L11+8
 226 001c A14B     		ldr	r3, .L11+8
 227 001e 1B6A     		ldr	r3, [r3, #32]
 228 0020 43F48073 		orr	r3, r3, #256
 229 0024 1362     		str	r3, [r2, #32]
  66:../bl/bl.c    **** 	//Buzzer init low for disable
  67:../bl/bl.c    **** 	PTD-> PCOR |= 1<<8;
 230              		.loc 1 67 0
 231 0026 9E4A     		ldr	r2, .L11+4
 232 0028 9D4B     		ldr	r3, .L11+4
 233 002a 9B68     		ldr	r3, [r3, #8]
 234 002c 43F48073 		orr	r3, r3, #256
 235 0030 9360     		str	r3, [r2, #8]
  68:../bl/bl.c    **** 
  69:../bl/bl.c    **** 	//can0
  70:../bl/bl.c    **** 	PCC->PCCn[PCC_PORTC_INDEX] |= PCC_PCCn_CGC_MASK; /* Enable clock for PORTE */
 236              		.loc 1 70 0
 237 0032 9A4A     		ldr	r2, .L11
 238 0034 994B     		ldr	r3, .L11
 239 0036 D3F82C31 		ldr	r3, [r3, #300]
 240 003a 43F08043 		orr	r3, r3, #1073741824
 241 003e C2F82C31 		str	r3, [r2, #300]
  71:../bl/bl.c    **** 	PORTC->PCR[2] |= PORT_PCR_MUX(3); /* Port E4: MUX = ALT5, CAN0_RX */
 242              		.loc 1 71 0
 243 0042 994A     		ldr	r2, .L11+12
 244 0044 984B     		ldr	r3, .L11+12
 245 0046 9B68     		ldr	r3, [r3, #8]
 246 0048 43F44073 		orr	r3, r3, #768
 247 004c 9360     		str	r3, [r2, #8]
  72:../bl/bl.c    **** 	PORTC->PCR[3] |= PORT_PCR_MUX(3); /* Port E5: MUX = ALT5, CAN0_TX */
 248              		.loc 1 72 0
 249 004e 964A     		ldr	r2, .L11+12
 250 0050 954B     		ldr	r3, .L11+12
 251 0052 DB68     		ldr	r3, [r3, #12]
 252 0054 43F44073 		orr	r3, r3, #768
 253 0058 D360     		str	r3, [r2, #12]
  73:../bl/bl.c    **** 	//can1
  74:../bl/bl.c    **** 	PCC->PCCn[PCC_PORTC_INDEX] |= PCC_PCCn_CGC_MASK; /* Enable clock for PORTE */
 254              		.loc 1 74 0
 255 005a 904A     		ldr	r2, .L11
 256 005c 8F4B     		ldr	r3, .L11
 257 005e D3F82C31 		ldr	r3, [r3, #300]
 258 0062 43F08043 		orr	r3, r3, #1073741824
 259 0066 C2F82C31 		str	r3, [r2, #300]
  75:../bl/bl.c    **** 	PORTC->PCR[6] |= PORT_PCR_MUX(3); /* Port E4: MUX = ALT5, CAN0_RX */
 260              		.loc 1 75 0
 261 006a 8F4A     		ldr	r2, .L11+12
 262 006c 8E4B     		ldr	r3, .L11+12
 263 006e 9B69     		ldr	r3, [r3, #24]
 264 0070 43F44073 		orr	r3, r3, #768
 265 0074 9361     		str	r3, [r2, #24]
  76:../bl/bl.c    **** 	PORTC->PCR[7] |= PORT_PCR_MUX(3); /* Port E5: MUX = ALT5, CAN0_TX */
 266              		.loc 1 76 0
 267 0076 8C4A     		ldr	r2, .L11+12
 268 0078 8B4B     		ldr	r3, .L11+12
 269 007a DB69     		ldr	r3, [r3, #28]
 270 007c 43F44073 		orr	r3, r3, #768
 271 0080 D361     		str	r3, [r2, #28]
  77:../bl/bl.c    **** 	//can2
  78:../bl/bl.c    **** 	PCC->PCCn[PCC_PORTC_INDEX] |= PCC_PCCn_CGC_MASK; /* Enable clock for PORTE */
 272              		.loc 1 78 0
 273 0082 864A     		ldr	r2, .L11
 274 0084 854B     		ldr	r3, .L11
 275 0086 D3F82C31 		ldr	r3, [r3, #300]
 276 008a 43F08043 		orr	r3, r3, #1073741824
 277 008e C2F82C31 		str	r3, [r2, #300]
  79:../bl/bl.c    **** 	PORTC->PCR[16] |= PORT_PCR_MUX(3); /* Port E4: MUX = ALT5, CAN0_RX */
 278              		.loc 1 79 0
 279 0092 854A     		ldr	r2, .L11+12
 280 0094 844B     		ldr	r3, .L11+12
 281 0096 1B6C     		ldr	r3, [r3, #64]
 282 0098 43F44073 		orr	r3, r3, #768
 283 009c 1364     		str	r3, [r2, #64]
  80:../bl/bl.c    **** 	PORTC->PCR[17] |= PORT_PCR_MUX(3); /* Port E5: MUX = ALT5, CAN0_TX */
 284              		.loc 1 80 0
 285 009e 824A     		ldr	r2, .L11+12
 286 00a0 814B     		ldr	r3, .L11+12
 287 00a2 5B6C     		ldr	r3, [r3, #68]
 288 00a4 43F44073 		orr	r3, r3, #768
 289 00a8 5364     		str	r3, [r2, #68]
  81:../bl/bl.c    **** 
  82:../bl/bl.c    **** 	//uart0
  83:../bl/bl.c    **** 	PCC->PCCn[PCC_PORTB_INDEX] |= PCC_PCCn_CGC_MASK; /* Enable clock for PORTB */
 290              		.loc 1 83 0
 291 00aa 7C4A     		ldr	r2, .L11
 292 00ac 7B4B     		ldr	r3, .L11
 293 00ae D3F82831 		ldr	r3, [r3, #296]
 294 00b2 43F08043 		orr	r3, r3, #1073741824
 295 00b6 C2F82831 		str	r3, [r2, #296]
  84:../bl/bl.c    **** 	PORTB->PCR[0] |= PORT_PCR_MUX(2); /* Port C6: MUX = ALT2,UART0 TX */
 296              		.loc 1 84 0
 297 00ba 7C4A     		ldr	r2, .L11+16
 298 00bc 7B4B     		ldr	r3, .L11+16
 299 00be 1B68     		ldr	r3, [r3]
 300 00c0 43F40073 		orr	r3, r3, #512
 301 00c4 1360     		str	r3, [r2]
  85:../bl/bl.c    **** 	PORTB->PCR[1] |= PORT_PCR_MUX(2); /* Port C7: MUX = ALT2,UART0 RX */
 302              		.loc 1 85 0
 303 00c6 794A     		ldr	r2, .L11+16
 304 00c8 784B     		ldr	r3, .L11+16
 305 00ca 5B68     		ldr	r3, [r3, #4]
 306 00cc 43F40073 		orr	r3, r3, #512
 307 00d0 5360     		str	r3, [r2, #4]
  86:../bl/bl.c    **** 	//uart1
  87:../bl/bl.c    **** 	PCC->PCCn[PCC_PORTD_INDEX] |= PCC_PCCn_CGC_MASK; /* Enable clock for PORTC */
 308              		.loc 1 87 0
 309 00d2 724A     		ldr	r2, .L11
 310 00d4 714B     		ldr	r3, .L11
 311 00d6 D3F83031 		ldr	r3, [r3, #304]
 312 00da 43F08043 		orr	r3, r3, #1073741824
 313 00de C2F83031 		str	r3, [r2, #304]
  88:../bl/bl.c    **** 	PORTD->PCR[13] |= PORT_PCR_MUX(3); /* Port C6: MUX = ALT2,UART1 TX */
 314              		.loc 1 88 0
 315 00e2 704A     		ldr	r2, .L11+8
 316 00e4 6F4B     		ldr	r3, .L11+8
 317 00e6 5B6B     		ldr	r3, [r3, #52]
 318 00e8 43F44073 		orr	r3, r3, #768
 319 00ec 5363     		str	r3, [r2, #52]
  89:../bl/bl.c    **** 	PORTD->PCR[14] |= PORT_PCR_MUX(3); /* Port C7: MUX = ALT2,UART1 RX */
 320              		.loc 1 89 0
 321 00ee 6D4A     		ldr	r2, .L11+8
 322 00f0 6C4B     		ldr	r3, .L11+8
 323 00f2 9B6B     		ldr	r3, [r3, #56]
 324 00f4 43F44073 		orr	r3, r3, #768
 325 00f8 9363     		str	r3, [r2, #56]
  90:../bl/bl.c    **** 	//uart2
  91:../bl/bl.c    **** 	PCC->PCCn[PCC_PORTA_INDEX] |= PCC_PCCn_CGC_MASK; /* Enable clock for PORTC */
 326              		.loc 1 91 0
 327 00fa 684A     		ldr	r2, .L11
 328 00fc 674B     		ldr	r3, .L11
 329 00fe D3F82431 		ldr	r3, [r3, #292]
 330 0102 43F08043 		orr	r3, r3, #1073741824
 331 0106 C2F82431 		str	r3, [r2, #292]
  92:../bl/bl.c    **** 	PORTA->PCR[8] |= PORT_PCR_MUX(2); /* Port C6: MUX = ALT2,UART1 TX */
 332              		.loc 1 92 0
 333 010a 694A     		ldr	r2, .L11+20
 334 010c 684B     		ldr	r3, .L11+20
 335 010e 1B6A     		ldr	r3, [r3, #32]
 336 0110 43F40073 		orr	r3, r3, #512
 337 0114 1362     		str	r3, [r2, #32]
  93:../bl/bl.c    **** 	PORTA->PCR[9] |= PORT_PCR_MUX(2); /* Port C7: MUX = ALT2,UART1 RX */
 338              		.loc 1 93 0
 339 0116 664A     		ldr	r2, .L11+20
 340 0118 654B     		ldr	r3, .L11+20
 341 011a 5B6A     		ldr	r3, [r3, #36]
 342 011c 43F40073 		orr	r3, r3, #512
 343 0120 5362     		str	r3, [r2, #36]
  94:../bl/bl.c    **** 
  95:../bl/bl.c    **** 	//4g
  96:../bl/bl.c    **** 	nic_io_init();
 344              		.loc 1 96 0
 345 0122 FFF7FEFF 		bl	nic_io_init
  97:../bl/bl.c    **** 
  98:../bl/bl.c    **** 	///DS3231SN
  99:../bl/bl.c    **** 	//PTA0 INT  PTA1 RST
 100:../bl/bl.c    **** 	PCC->PCCn[PCC_PORTA_INDEX] |= PCC_PCCn_CGC_MASK; /* Enable clock for PORTC */
 346              		.loc 1 100 0
 347 0126 5D4A     		ldr	r2, .L11
 348 0128 5C4B     		ldr	r3, .L11
 349 012a D3F82431 		ldr	r3, [r3, #292]
 350 012e 43F08043 		orr	r3, r3, #1073741824
 351 0132 C2F82431 		str	r3, [r2, #292]
 101:../bl/bl.c    **** 	PORTA->PCR[0] |= PORT_PCR_MUX(1); /* Port C6: MUX = ALT2,UART1 TX */
 352              		.loc 1 101 0
 353 0136 5E4A     		ldr	r2, .L11+20
 354 0138 5D4B     		ldr	r3, .L11+20
 355 013a 1B68     		ldr	r3, [r3]
 356 013c 43F48073 		orr	r3, r3, #256
 357 0140 1360     		str	r3, [r2]
 102:../bl/bl.c    **** 	PORTA->PCR[1] |= PORT_PCR_MUX(1); /* Port C7: MUX = ALT2,UART1 RX */
 358              		.loc 1 102 0
 359 0142 5B4A     		ldr	r2, .L11+20
 360 0144 5A4B     		ldr	r3, .L11+20
 361 0146 5B68     		ldr	r3, [r3, #4]
 362 0148 43F48073 		orr	r3, r3, #256
 363 014c 5360     		str	r3, [r2, #4]
 103:../bl/bl.c    **** 	PTA->PDDR |= 1 << 0; 					/* Port D8:  Data Direction= output */
 364              		.loc 1 103 0
 365 014e 594A     		ldr	r2, .L11+24
 366 0150 584B     		ldr	r3, .L11+24
 367 0152 5B69     		ldr	r3, [r3, #20]
 368 0154 43F00103 		orr	r3, r3, #1
 369 0158 5361     		str	r3, [r2, #20]
 104:../bl/bl.c    **** 	PTA->PDDR |= 1 << 1; 					/* Port D8:  Data Direction= output */
 370              		.loc 1 104 0
 371 015a 564A     		ldr	r2, .L11+24
 372 015c 554B     		ldr	r3, .L11+24
 373 015e 5B69     		ldr	r3, [r3, #20]
 374 0160 43F00203 		orr	r3, r3, #2
 375 0164 5361     		str	r3, [r2, #20]
 105:../bl/bl.c    **** 
 106:../bl/bl.c    **** 	//PB9 I2C0 SCL, PB10 SDA
 107:../bl/bl.c    **** 	PCC->PCCn[PCC_PORTB_INDEX] = PCC_PCCn_CGC_MASK; /* Enable clock for PORT D */
 376              		.loc 1 107 0
 377 0166 4D4B     		ldr	r3, .L11
 378 0168 4FF08042 		mov	r2, #1073741824
 379 016c C3F82821 		str	r2, [r3, #296]
 108:../bl/bl.c    **** 	PORTB->PCR[9] |= PORT_PCR_MUX(1);		 /* Port D8:  MUX = ALT1, GPIO (to blue LED on EVB) */
 380              		.loc 1 108 0
 381 0170 4E4A     		ldr	r2, .L11+16
 382 0172 4E4B     		ldr	r3, .L11+16
 383 0174 5B6A     		ldr	r3, [r3, #36]
 384 0176 43F48073 		orr	r3, r3, #256
 385 017a 5362     		str	r3, [r2, #36]
 109:../bl/bl.c    **** 	PORTB->PCR[10] |= PORT_PCR_MUX(1);		 /* Port D8:  MUX = ALT1, GPIO (to blue LED on EVB) */
 386              		.loc 1 109 0
 387 017c 4B4A     		ldr	r2, .L11+16
 388 017e 4B4B     		ldr	r3, .L11+16
 389 0180 9B6A     		ldr	r3, [r3, #40]
 390 0182 43F48073 		orr	r3, r3, #256
 391 0186 9362     		str	r3, [r2, #40]
 110:../bl/bl.c    **** 	PTB->PDDR |= 1 << 9; 					/* Port D8:  Data Direction= output */
 392              		.loc 1 110 0
 393 0188 4B4A     		ldr	r2, .L11+28
 394 018a 4B4B     		ldr	r3, .L11+28
 395 018c 5B69     		ldr	r3, [r3, #20]
 396 018e 43F40073 		orr	r3, r3, #512
 397 0192 5361     		str	r3, [r2, #20]
 111:../bl/bl.c    **** 	PTB->PDDR |= 1 << 10; 					/* Port D8:  Data Direction= output */
 398              		.loc 1 111 0
 399 0194 484A     		ldr	r2, .L11+28
 400 0196 484B     		ldr	r3, .L11+28
 401 0198 5B69     		ldr	r3, [r3, #20]
 402 019a 43F48063 		orr	r3, r3, #1024
 403 019e 5361     		str	r3, [r2, #20]
 112:../bl/bl.c    **** 	PTB-> PSOR |= 1<<9;
 404              		.loc 1 112 0
 405 01a0 454A     		ldr	r2, .L11+28
 406 01a2 454B     		ldr	r3, .L11+28
 407 01a4 5B68     		ldr	r3, [r3, #4]
 408 01a6 43F40073 		orr	r3, r3, #512
 409 01aa 5360     		str	r3, [r2, #4]
 113:../bl/bl.c    **** 	PTB-> PSOR |= 1<<10;
 410              		.loc 1 113 0
 411 01ac 424A     		ldr	r2, .L11+28
 412 01ae 424B     		ldr	r3, .L11+28
 413 01b0 5B68     		ldr	r3, [r3, #4]
 414 01b2 43F48063 		orr	r3, r3, #1024
 415 01b6 5360     		str	r3, [r2, #4]
 114:../bl/bl.c    **** 
 115:../bl/bl.c    **** 	//PTA16  DS2411R
 116:../bl/bl.c    **** 	PCC->PCCn[PCC_PORTA_INDEX] |= PCC_PCCn_CGC_MASK; /* Enable clock for PORTC */
 416              		.loc 1 116 0
 417 01b8 384A     		ldr	r2, .L11
 418 01ba 384B     		ldr	r3, .L11
 419 01bc D3F82431 		ldr	r3, [r3, #292]
 420 01c0 43F08043 		orr	r3, r3, #1073741824
 421 01c4 C2F82431 		str	r3, [r2, #292]
 117:../bl/bl.c    **** 	PORTA->PCR[16] |= PORT_PCR_MUX(1); /* Port C6: MUX = ALT2,UART1 TX */
 422              		.loc 1 117 0
 423 01c8 394A     		ldr	r2, .L11+20
 424 01ca 394B     		ldr	r3, .L11+20
 425 01cc 1B6C     		ldr	r3, [r3, #64]
 426 01ce 43F48073 		orr	r3, r3, #256
 427 01d2 1364     		str	r3, [r2, #64]
 118:../bl/bl.c    **** 	PTA->PDDR |= 1 << 16; 					/* Port D8:  Data Direction= output */
 428              		.loc 1 118 0
 429 01d4 374A     		ldr	r2, .L11+24
 430 01d6 374B     		ldr	r3, .L11+24
 431 01d8 5B69     		ldr	r3, [r3, #20]
 432 01da 43F48033 		orr	r3, r3, #65536
 433 01de 5361     		str	r3, [r2, #20]
 119:../bl/bl.c    **** 
 120:../bl/bl.c    **** 	//rtc
 121:../bl/bl.c    **** 	ds3231_init();
 434              		.loc 1 121 0
 435 01e0 FFF7FEFF 		bl	ds3231_init
 122:../bl/bl.c    **** 
 123:../bl/bl.c    **** 	//io in
 124:../bl/bl.c    **** 	PCC->PCCn[PCC_PORTB_INDEX] |= PCC_PCCn_CGC_MASK; /* Enable clock for PORTB */
 436              		.loc 1 124 0
 437 01e4 2D4A     		ldr	r2, .L11
 438 01e6 2D4B     		ldr	r3, .L11
 439 01e8 D3F82831 		ldr	r3, [r3, #296]
 440 01ec 43F08043 		orr	r3, r3, #1073741824
 441 01f0 C2F82831 		str	r3, [r2, #296]
 125:../bl/bl.c    **** 	PORTB->PCR[4] |= PORT_PCR_MUX(1); /* Port C6: MUX = ALT2,UART0 TX */
 442              		.loc 1 125 0
 443 01f4 2D4A     		ldr	r2, .L11+16
 444 01f6 2D4B     		ldr	r3, .L11+16
 445 01f8 1B69     		ldr	r3, [r3, #16]
 446 01fa 43F48073 		orr	r3, r3, #256
 447 01fe 1361     		str	r3, [r2, #16]
 126:../bl/bl.c    **** 	PORTB->PCR[5] |= PORT_PCR_MUX(1); /* Port C7: MUX = ALT2,UART0 RX */
 448              		.loc 1 126 0
 449 0200 2A4A     		ldr	r2, .L11+16
 450 0202 2A4B     		ldr	r3, .L11+16
 451 0204 5B69     		ldr	r3, [r3, #20]
 452 0206 43F48073 		orr	r3, r3, #256
 453 020a 5361     		str	r3, [r2, #20]
 127:../bl/bl.c    **** 	PTB->PDDR &= ~((1<<4)|(1<<5));
 454              		.loc 1 127 0
 455 020c 2A4A     		ldr	r2, .L11+28
 456 020e 2A4B     		ldr	r3, .L11+28
 457 0210 5B69     		ldr	r3, [r3, #20]
 458 0212 23F03003 		bic	r3, r3, #48
 459 0216 5361     		str	r3, [r2, #20]
 128:../bl/bl.c    **** 	PCC->PCCn[PCC_PORTE_INDEX] |= PCC_PCCn_CGC_MASK; /* Enable clock for PORTB */
 460              		.loc 1 128 0
 461 0218 204A     		ldr	r2, .L11
 462 021a 204B     		ldr	r3, .L11
 463 021c D3F83431 		ldr	r3, [r3, #308]
 464 0220 43F08043 		orr	r3, r3, #1073741824
 465 0224 C2F83431 		str	r3, [r2, #308]
 129:../bl/bl.c    **** 	PORTE->PCR[8] |= PORT_PCR_MUX(1); /* Port C6: MUX = ALT2,UART0 TX */
 466              		.loc 1 129 0
 467 0228 244A     		ldr	r2, .L11+32
 468 022a 244B     		ldr	r3, .L11+32
 469 022c 1B6A     		ldr	r3, [r3, #32]
 470 022e 43F48073 		orr	r3, r3, #256
 471 0232 1362     		str	r3, [r2, #32]
 130:../bl/bl.c    **** 	PORTE->PCR[9] |= PORT_PCR_MUX(1); /* Port C7: MUX = ALT2,UART0 RX */
 472              		.loc 1 130 0
 473 0234 214A     		ldr	r2, .L11+32
 474 0236 214B     		ldr	r3, .L11+32
 475 0238 5B6A     		ldr	r3, [r3, #36]
 476 023a 43F48073 		orr	r3, r3, #256
 477 023e 5362     		str	r3, [r2, #36]
 131:../bl/bl.c    **** 	PTE->PDDR &= ~((1<<8)|(1<<9));
 478              		.loc 1 131 0
 479 0240 1F4A     		ldr	r2, .L11+36
 480 0242 1F4B     		ldr	r3, .L11+36
 481 0244 5B69     		ldr	r3, [r3, #20]
 482 0246 23F44073 		bic	r3, r3, #768
 483 024a 5361     		str	r3, [r2, #20]
 132:../bl/bl.c    **** 
 133:../bl/bl.c    **** 
 134:../bl/bl.c    **** 	//leds
 135:../bl/bl.c    **** 	PCC->PCCn[PCC_PORTB_INDEX] |= PCC_PCCn_CGC_MASK; /* Enable clock for PORTB */
 484              		.loc 1 135 0
 485 024c 134A     		ldr	r2, .L11
 486 024e 134B     		ldr	r3, .L11
 487 0250 D3F82831 		ldr	r3, [r3, #296]
 488 0254 43F08043 		orr	r3, r3, #1073741824
 489 0258 C2F82831 		str	r3, [r2, #296]
 136:../bl/bl.c    **** 	PORTB->PCR[12] |= PORT_PCR_MUX(1); /* Port C6: MUX = ALT2,UART0 TX */
 490              		.loc 1 136 0
 491 025c 134A     		ldr	r2, .L11+16
 492 025e 134B     		ldr	r3, .L11+16
 493 0260 1B6B     		ldr	r3, [r3, #48]
 494 0262 43F48073 		orr	r3, r3, #256
 495 0266 1363     		str	r3, [r2, #48]
 137:../bl/bl.c    **** 	PORTB->PCR[13] |= PORT_PCR_MUX(1); /* Port C7: MUX = ALT2,UART0 RX */
 496              		.loc 1 137 0
 497 0268 104A     		ldr	r2, .L11+16
 498 026a 104B     		ldr	r3, .L11+16
 499 026c 5B6B     		ldr	r3, [r3, #52]
 500 026e 43F48073 		orr	r3, r3, #256
 501 0272 5363     		str	r3, [r2, #52]
 138:../bl/bl.c    **** 	PORTB->PCR[14] |= PORT_PCR_MUX(1); /* Port C7: MUX = ALT2,UART0 RX */
 502              		.loc 1 138 0
 503 0274 0D4A     		ldr	r2, .L11+16
 504 0276 0D4B     		ldr	r3, .L11+16
 505 0278 9B6B     		ldr	r3, [r3, #56]
 506 027a 43F48073 		orr	r3, r3, #256
 507 027e 9363     		str	r3, [r2, #56]
 139:../bl/bl.c    **** 	PORTB->PCR[15] |= PORT_PCR_MUX(1); /* Port C7: MUX = ALT2,UART0 RX */
 508              		.loc 1 139 0
 509 0280 0A4A     		ldr	r2, .L11+16
 510 0282 0A4B     		ldr	r3, .L11+16
 511 0284 DB6B     		ldr	r3, [r3, #60]
 512 0286 43F48073 		orr	r3, r3, #256
 513 028a D363     		str	r3, [r2, #60]
 140:../bl/bl.c    **** 	PORTB->PCR[16] |= PORT_PCR_MUX(1); /* Port C7: MUX = ALT2,UART0 RX */
 514              		.loc 1 140 0
 515 028c 074A     		ldr	r2, .L11+16
 516 028e 074B     		ldr	r3, .L11+16
 517 0290 1B6C     		ldr	r3, [r3, #64]
 518 0292 43F48073 		orr	r3, r3, #256
 519 0296 1364     		str	r3, [r2, #64]
 520 0298 14E0     		b	.L12
 521              	.L13:
 522 029a 00BF     		.align	2
 523              	.L11:
 524 029c 00500640 		.word	1074155520
 525 02a0 C0F00F40 		.word	1074786496
 526 02a4 00C00440 		.word	1074053120
 527 02a8 00B00440 		.word	1074049024
 528 02ac 00A00440 		.word	1074044928
 529 02b0 00900440 		.word	1074040832
 530 02b4 00F00F40 		.word	1074786304
 531 02b8 40F00F40 		.word	1074786368
 532 02bc 00D00440 		.word	1074057216
 533 02c0 00F10F40 		.word	1074786560
 534              	.L12:
 141:../bl/bl.c    **** 	PORTB->PCR[17] |= PORT_PCR_MUX(1); /* Port C7: MUX = ALT2,UART0 RX */
 535              		.loc 1 141 0
 536 02c4 234A     		ldr	r2, .L14
 537 02c6 234B     		ldr	r3, .L14
 538 02c8 5B6C     		ldr	r3, [r3, #68]
 539 02ca 43F48073 		orr	r3, r3, #256
 540 02ce 5364     		str	r3, [r2, #68]
 142:../bl/bl.c    **** 	PTB->PDDR |= ((1<<12)|(1<<13)|(1<<14)|(1<<15)|(1<<16)|(1<<17));
 541              		.loc 1 142 0
 542 02d0 214A     		ldr	r2, .L14+4
 543 02d2 214B     		ldr	r3, .L14+4
 544 02d4 5B69     		ldr	r3, [r3, #20]
 545 02d6 43F47C33 		orr	r3, r3, #258048
 546 02da 5361     		str	r3, [r2, #20]
 143:../bl/bl.c    **** 
 144:../bl/bl.c    **** 	//power
 145:../bl/bl.c    **** 	PCC->PCCn[PCC_PORTD_INDEX] |= PCC_PCCn_CGC_MASK; /* Enable clock for PORTB */
 547              		.loc 1 145 0
 548 02dc 1F4A     		ldr	r2, .L14+8
 549 02de 1F4B     		ldr	r3, .L14+8
 550 02e0 D3F83031 		ldr	r3, [r3, #304]
 551 02e4 43F08043 		orr	r3, r3, #1073741824
 552 02e8 C2F83031 		str	r3, [r2, #304]
 146:../bl/bl.c    **** 	PORTD->PCR[3] |= PORT_PCR_MUX(1); /* Port C6: MUX = ALT2,UART0 TX */
 553              		.loc 1 146 0
 554 02ec 1C4A     		ldr	r2, .L14+12
 555 02ee 1C4B     		ldr	r3, .L14+12
 556 02f0 DB68     		ldr	r3, [r3, #12]
 557 02f2 43F48073 		orr	r3, r3, #256
 558 02f6 D360     		str	r3, [r2, #12]
 147:../bl/bl.c    **** 	//powec
 148:../bl/bl.c    **** 	PORTD->PCR[4] |= PORT_PCR_MUX(1); /* Port C6: MUX = ALT2,UART0 TX */
 559              		.loc 1 148 0
 560 02f8 194A     		ldr	r2, .L14+12
 561 02fa 194B     		ldr	r3, .L14+12
 562 02fc 1B69     		ldr	r3, [r3, #16]
 563 02fe 43F48073 		orr	r3, r3, #256
 564 0302 1361     		str	r3, [r2, #16]
 149:../bl/bl.c    **** 	PTD->PDDR |= ((1<<3)|(1<<4));
 565              		.loc 1 149 0
 566 0304 174A     		ldr	r2, .L14+16
 567 0306 174B     		ldr	r3, .L14+16
 568 0308 5B69     		ldr	r3, [r3, #20]
 569 030a 43F01803 		orr	r3, r3, #24
 570 030e 5361     		str	r3, [r2, #20]
 150:../bl/bl.c    **** 	PTD->PCOR |= 1<<3;
 571              		.loc 1 150 0
 572 0310 144A     		ldr	r2, .L14+16
 573 0312 144B     		ldr	r3, .L14+16
 574 0314 9B68     		ldr	r3, [r3, #8]
 575 0316 43F00803 		orr	r3, r3, #8
 576 031a 9360     		str	r3, [r2, #8]
 151:../bl/bl.c    **** 	PTD->PSOR |= 1<<4;
 577              		.loc 1 151 0
 578 031c 114A     		ldr	r2, .L14+16
 579 031e 114B     		ldr	r3, .L14+16
 580 0320 5B68     		ldr	r3, [r3, #4]
 581 0322 43F01003 		orr	r3, r3, #16
 582 0326 5360     		str	r3, [r2, #4]
 152:../bl/bl.c    **** 
 153:../bl/bl.c    **** 	//RS485
 154:../bl/bl.c    **** 	PCC-> PCCn[PCC_PORTC_INDEX] = PCC_PCCn_CGC_MASK; /* Enable clock to PORT C */
 583              		.loc 1 154 0
 584 0328 0C4B     		ldr	r3, .L14+8
 585 032a 4FF08042 		mov	r2, #1073741824
 586 032e C3F82C21 		str	r2, [r3, #300]
 155:../bl/bl.c    **** 	PTC->PDDR |= 1<<10; /* Port D0: Data Direction= output */
 587              		.loc 1 155 0
 588 0332 0D4A     		ldr	r2, .L14+20
 589 0334 0C4B     		ldr	r3, .L14+20
 590 0336 5B69     		ldr	r3, [r3, #20]
 591 0338 43F48063 		orr	r3, r3, #1024
 592 033c 5361     		str	r3, [r2, #20]
 156:../bl/bl.c    **** 	PORTC->PCR[10] = 0x00000100; /* Port D0: MUX = GPIO */
 593              		.loc 1 156 0
 594 033e 0B4B     		ldr	r3, .L14+24
 595 0340 4FF48072 		mov	r2, #256
 596 0344 9A62     		str	r2, [r3, #40]
 157:../bl/bl.c    **** 	PTC-> PCOR |= 1<<10;	//default receive
 597              		.loc 1 157 0
 598 0346 084A     		ldr	r2, .L14+20
 599 0348 074B     		ldr	r3, .L14+20
 600 034a 9B68     		ldr	r3, [r3, #8]
 601 034c 43F48063 		orr	r3, r3, #1024
 602 0350 9360     		str	r3, [r2, #8]
 158:../bl/bl.c    **** 
 159:../bl/bl.c    **** }
 603              		.loc 1 159 0
 604 0352 80BD     		pop	{r7, pc}
 605              	.L15:
 606              		.align	2
 607              	.L14:
 608 0354 00A00440 		.word	1074044928
 609 0358 40F00F40 		.word	1074786368
 610 035c 00500640 		.word	1074155520
 611 0360 00C00440 		.word	1074053120
 612 0364 C0F00F40 		.word	1074786496
 613 0368 80F00F40 		.word	1074786432
 614 036c 00B00440 		.word	1074049024
 615              		.cfi_endproc
 616              	.LFE3:
 618              		.section	.text.rs485_dir,"ax",%progbits
 619              		.align	2
 620              		.global	rs485_dir
 621              		.thumb
 622              		.thumb_func
 624              	rs485_dir:
 625              	.LFB4:
 160:../bl/bl.c    **** void rs485_dir(int tx)
 161:../bl/bl.c    **** {
 626              		.loc 1 161 0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 8
 629              		@ frame_needed = 1, uses_anonymous_args = 0
 630              		@ link register save eliminated.
 631 0000 80B4     		push	{r7}
 632              		.cfi_def_cfa_offset 4
 633              		.cfi_offset 7, -4
 634 0002 83B0     		sub	sp, sp, #12
 635              		.cfi_def_cfa_offset 16
 636 0004 00AF     		add	r7, sp, #0
 637              		.cfi_def_cfa_register 7
 638 0006 7860     		str	r0, [r7, #4]
 162:../bl/bl.c    **** 	if(tx) PTC-> PSOR |= 1<<10;
 639              		.loc 1 162 0
 640 0008 7B68     		ldr	r3, [r7, #4]
 641 000a 002B     		cmp	r3, #0
 642 000c 06D0     		beq	.L17
 643              		.loc 1 162 0 is_stmt 0 discriminator 1
 644 000e 094A     		ldr	r2, .L19
 645 0010 084B     		ldr	r3, .L19
 646 0012 5B68     		ldr	r3, [r3, #4]
 647 0014 43F48063 		orr	r3, r3, #1024
 648 0018 5360     		str	r3, [r2, #4]
 649 001a 05E0     		b	.L16
 650              	.L17:
 163:../bl/bl.c    **** 	else PTC-> PCOR |= 1<<10;
 651              		.loc 1 163 0 is_stmt 1
 652 001c 054A     		ldr	r2, .L19
 653 001e 054B     		ldr	r3, .L19
 654 0020 9B68     		ldr	r3, [r3, #8]
 655 0022 43F48063 		orr	r3, r3, #1024
 656 0026 9360     		str	r3, [r2, #8]
 657              	.L16:
 164:../bl/bl.c    **** }
 658              		.loc 1 164 0
 659 0028 0C37     		adds	r7, r7, #12
 660              		.cfi_def_cfa_offset 4
 661 002a BD46     		mov	sp, r7
 662              		.cfi_def_cfa_register 13
 663              		@ sp needed
 664 002c 5DF8047B 		ldr	r7, [sp], #4
 665              		.cfi_restore 7
 666              		.cfi_def_cfa_offset 0
 667 0030 7047     		bx	lr
 668              	.L20:
 669 0032 00BF     		.align	2
 670              	.L19:
 671 0034 80F00F40 		.word	1074786432
 672              		.cfi_endproc
 673              	.LFE4:
 675              		.section	.text.get_input_val,"ax",%progbits
 676              		.align	2
 677              		.global	get_input_val
 678              		.thumb
 679              		.thumb_func
 681              	get_input_val:
 682              	.LFB5:
 165:../bl/bl.c    **** int get_input_val(int id)
 166:../bl/bl.c    **** {
 683              		.loc 1 166 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 8
 686              		@ frame_needed = 1, uses_anonymous_args = 0
 687              		@ link register save eliminated.
 688 0000 80B4     		push	{r7}
 689              		.cfi_def_cfa_offset 4
 690              		.cfi_offset 7, -4
 691 0002 83B0     		sub	sp, sp, #12
 692              		.cfi_def_cfa_offset 16
 693 0004 00AF     		add	r7, sp, #0
 694              		.cfi_def_cfa_register 7
 695 0006 7860     		str	r0, [r7, #4]
 167:../bl/bl.c    **** 	if(id==0) return PTB->PDIR&(1<<4);
 696              		.loc 1 167 0
 697 0008 7B68     		ldr	r3, [r7, #4]
 698 000a 002B     		cmp	r3, #0
 699 000c 04D1     		bne	.L22
 700              		.loc 1 167 0 is_stmt 0 discriminator 1
 701 000e 124B     		ldr	r3, .L27
 702 0010 1B69     		ldr	r3, [r3, #16]
 703 0012 03F01003 		and	r3, r3, #16
 704 0016 18E0     		b	.L23
 705              	.L22:
 168:../bl/bl.c    **** 	else if(id==1) return PTB->PDIR&(1<<5);
 706              		.loc 1 168 0 is_stmt 1
 707 0018 7B68     		ldr	r3, [r7, #4]
 708 001a 012B     		cmp	r3, #1
 709 001c 04D1     		bne	.L24
 710              		.loc 1 168 0 is_stmt 0 discriminator 1
 711 001e 0E4B     		ldr	r3, .L27
 712 0020 1B69     		ldr	r3, [r3, #16]
 713 0022 03F02003 		and	r3, r3, #32
 714 0026 10E0     		b	.L23
 715              	.L24:
 169:../bl/bl.c    **** 	else if(id==2) return PTE->PDIR&(1<<8);
 716              		.loc 1 169 0 is_stmt 1
 717 0028 7B68     		ldr	r3, [r7, #4]
 718 002a 022B     		cmp	r3, #2
 719 002c 04D1     		bne	.L25
 720              		.loc 1 169 0 is_stmt 0 discriminator 1
 721 002e 0B4B     		ldr	r3, .L27+4
 722 0030 1B69     		ldr	r3, [r3, #16]
 723 0032 03F48073 		and	r3, r3, #256
 724 0036 08E0     		b	.L23
 725              	.L25:
 170:../bl/bl.c    **** 	else if(id==3) return PTE->PDIR&(1<<9);
 726              		.loc 1 170 0 is_stmt 1
 727 0038 7B68     		ldr	r3, [r7, #4]
 728 003a 032B     		cmp	r3, #3
 729 003c 04D1     		bne	.L26
 730              		.loc 1 170 0 is_stmt 0 discriminator 1
 731 003e 074B     		ldr	r3, .L27+4
 732 0040 1B69     		ldr	r3, [r3, #16]
 733 0042 03F40073 		and	r3, r3, #512
 734 0046 00E0     		b	.L23
 735              	.L26:
 171:../bl/bl.c    **** 	else return 0;
 736              		.loc 1 171 0 is_stmt 1
 737 0048 0023     		movs	r3, #0
 738              	.L23:
 172:../bl/bl.c    **** }
 739              		.loc 1 172 0
 740 004a 1846     		mov	r0, r3
 741 004c 0C37     		adds	r7, r7, #12
 742              		.cfi_def_cfa_offset 4
 743 004e BD46     		mov	sp, r7
 744              		.cfi_def_cfa_register 13
 745              		@ sp needed
 746 0050 5DF8047B 		ldr	r7, [sp], #4
 747              		.cfi_restore 7
 748              		.cfi_def_cfa_offset 0
 749 0054 7047     		bx	lr
 750              	.L28:
 751 0056 00BF     		.align	2
 752              	.L27:
 753 0058 40F00F40 		.word	1074786368
 754 005c 00F10F40 		.word	1074786560
 755              		.cfi_endproc
 756              	.LFE5:
 758              		.section	.text.led_ctrl,"ax",%progbits
 759              		.align	2
 760              		.global	led_ctrl
 761              		.thumb
 762              		.thumb_func
 764              	led_ctrl:
 765              	.LFB6:
 173:../bl/bl.c    **** void led_ctrl(int id, int v)
 174:../bl/bl.c    **** {
 766              		.loc 1 174 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 8
 769              		@ frame_needed = 1, uses_anonymous_args = 0
 770              		@ link register save eliminated.
 771 0000 80B4     		push	{r7}
 772              		.cfi_def_cfa_offset 4
 773              		.cfi_offset 7, -4
 774 0002 83B0     		sub	sp, sp, #12
 775              		.cfi_def_cfa_offset 16
 776 0004 00AF     		add	r7, sp, #0
 777              		.cfi_def_cfa_register 7
 778 0006 7860     		str	r0, [r7, #4]
 779 0008 3960     		str	r1, [r7]
 175:../bl/bl.c    **** 	if(v) PTB->PSOR |= 1<<(id+12);
 780              		.loc 1 175 0
 781 000a 3B68     		ldr	r3, [r7]
 782 000c 002B     		cmp	r3, #0
 783 000e 0AD0     		beq	.L30
 784              		.loc 1 175 0 is_stmt 0 discriminator 1
 785 0010 0C49     		ldr	r1, .L32
 786 0012 0C4B     		ldr	r3, .L32
 787 0014 5B68     		ldr	r3, [r3, #4]
 788 0016 7A68     		ldr	r2, [r7, #4]
 789 0018 0C32     		adds	r2, r2, #12
 790 001a 0120     		movs	r0, #1
 791 001c 00FA02F2 		lsl	r2, r0, r2
 792 0020 1343     		orrs	r3, r3, r2
 793 0022 4B60     		str	r3, [r1, #4]
 794 0024 09E0     		b	.L29
 795              	.L30:
 176:../bl/bl.c    **** 	else PTB->PCOR |= 1<<(id+12);
 796              		.loc 1 176 0 is_stmt 1
 797 0026 0749     		ldr	r1, .L32
 798 0028 064B     		ldr	r3, .L32
 799 002a 9B68     		ldr	r3, [r3, #8]
 800 002c 7A68     		ldr	r2, [r7, #4]
 801 002e 0C32     		adds	r2, r2, #12
 802 0030 0120     		movs	r0, #1
 803 0032 00FA02F2 		lsl	r2, r0, r2
 804 0036 1343     		orrs	r3, r3, r2
 805 0038 8B60     		str	r3, [r1, #8]
 806              	.L29:
 177:../bl/bl.c    **** }
 807              		.loc 1 177 0
 808 003a 0C37     		adds	r7, r7, #12
 809              		.cfi_def_cfa_offset 4
 810 003c BD46     		mov	sp, r7
 811              		.cfi_def_cfa_register 13
 812              		@ sp needed
 813 003e 5DF8047B 		ldr	r7, [sp], #4
 814              		.cfi_restore 7
 815              		.cfi_def_cfa_offset 0
 816 0042 7047     		bx	lr
 817              	.L33:
 818              		.align	2
 819              	.L32:
 820 0044 40F00F40 		.word	1074786368
 821              		.cfi_endproc
 822              	.LFE6:
 824              		.section	.text.power_ctrl,"ax",%progbits
 825              		.align	2
 826              		.global	power_ctrl
 827              		.thumb
 828              		.thumb_func
 830              	power_ctrl:
 831              	.LFB7:
 178:../bl/bl.c    **** void power_ctrl(int v)
 179:../bl/bl.c    **** {
 832              		.loc 1 179 0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 8
 835              		@ frame_needed = 1, uses_anonymous_args = 0
 836              		@ link register save eliminated.
 837 0000 80B4     		push	{r7}
 838              		.cfi_def_cfa_offset 4
 839              		.cfi_offset 7, -4
 840 0002 83B0     		sub	sp, sp, #12
 841              		.cfi_def_cfa_offset 16
 842 0004 00AF     		add	r7, sp, #0
 843              		.cfi_def_cfa_register 7
 844 0006 7860     		str	r0, [r7, #4]
 180:../bl/bl.c    **** 	if(v) PTD->PSOR |= 1<<3;
 845              		.loc 1 180 0
 846 0008 7B68     		ldr	r3, [r7, #4]
 847 000a 002B     		cmp	r3, #0
 848 000c 06D0     		beq	.L35
 849              		.loc 1 180 0 is_stmt 0 discriminator 1
 850 000e 094A     		ldr	r2, .L37
 851 0010 084B     		ldr	r3, .L37
 852 0012 5B68     		ldr	r3, [r3, #4]
 853 0014 43F00803 		orr	r3, r3, #8
 854 0018 5360     		str	r3, [r2, #4]
 855 001a 05E0     		b	.L34
 856              	.L35:
 181:../bl/bl.c    **** 	else PTD->PCOR |= 1<<3;
 857              		.loc 1 181 0 is_stmt 1
 858 001c 054A     		ldr	r2, .L37
 859 001e 054B     		ldr	r3, .L37
 860 0020 9B68     		ldr	r3, [r3, #8]
 861 0022 43F00803 		orr	r3, r3, #8
 862 0026 9360     		str	r3, [r2, #8]
 863              	.L34:
 182:../bl/bl.c    **** }
 864              		.loc 1 182 0
 865 0028 0C37     		adds	r7, r7, #12
 866              		.cfi_def_cfa_offset 4
 867 002a BD46     		mov	sp, r7
 868              		.cfi_def_cfa_register 13
 869              		@ sp needed
 870 002c 5DF8047B 		ldr	r7, [sp], #4
 871              		.cfi_restore 7
 872              		.cfi_def_cfa_offset 0
 873 0030 7047     		bx	lr
 874              	.L38:
 875 0032 00BF     		.align	2
 876              	.L37:
 877 0034 C0F00F40 		.word	1074786496
 878              		.cfi_endproc
 879              	.LFE7:
 881              		.section	.text.powec_ctrl,"ax",%progbits
 882              		.align	2
 883              		.global	powec_ctrl
 884              		.thumb
 885              		.thumb_func
 887              	powec_ctrl:
 888              	.LFB8:
 183:../bl/bl.c    **** void powec_ctrl(int v)
 184:../bl/bl.c    **** {
 889              		.loc 1 184 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 8
 892              		@ frame_needed = 1, uses_anonymous_args = 0
 893              		@ link register save eliminated.
 894 0000 80B4     		push	{r7}
 895              		.cfi_def_cfa_offset 4
 896              		.cfi_offset 7, -4
 897 0002 83B0     		sub	sp, sp, #12
 898              		.cfi_def_cfa_offset 16
 899 0004 00AF     		add	r7, sp, #0
 900              		.cfi_def_cfa_register 7
 901 0006 7860     		str	r0, [r7, #4]
 185:../bl/bl.c    **** 	if(v) PTD->PSOR |= 1<<4;
 902              		.loc 1 185 0
 903 0008 7B68     		ldr	r3, [r7, #4]
 904 000a 002B     		cmp	r3, #0
 905 000c 06D0     		beq	.L40
 906              		.loc 1 185 0 is_stmt 0 discriminator 1
 907 000e 094A     		ldr	r2, .L42
 908 0010 084B     		ldr	r3, .L42
 909 0012 5B68     		ldr	r3, [r3, #4]
 910 0014 43F01003 		orr	r3, r3, #16
 911 0018 5360     		str	r3, [r2, #4]
 912 001a 05E0     		b	.L39
 913              	.L40:
 186:../bl/bl.c    **** 	else PTD->PCOR |= 1<<4;
 914              		.loc 1 186 0 is_stmt 1
 915 001c 054A     		ldr	r2, .L42
 916 001e 054B     		ldr	r3, .L42
 917 0020 9B68     		ldr	r3, [r3, #8]
 918 0022 43F01003 		orr	r3, r3, #16
 919 0026 9360     		str	r3, [r2, #8]
 920              	.L39:
 187:../bl/bl.c    **** }
 921              		.loc 1 187 0
 922 0028 0C37     		adds	r7, r7, #12
 923              		.cfi_def_cfa_offset 4
 924 002a BD46     		mov	sp, r7
 925              		.cfi_def_cfa_register 13
 926              		@ sp needed
 927 002c 5DF8047B 		ldr	r7, [sp], #4
 928              		.cfi_restore 7
 929              		.cfi_def_cfa_offset 0
 930 0030 7047     		bx	lr
 931              	.L43:
 932 0032 00BF     		.align	2
 933              	.L42:
 934 0034 C0F00F40 		.word	1074786496
 935              		.cfi_endproc
 936              	.LFE8:
 938              		.section	.text.get_tick_count,"ax",%progbits
 939              		.align	2
 940              		.global	get_tick_count
 941              		.thumb
 942              		.thumb_func
 944              	get_tick_count:
 945              	.LFB9:
 188:../bl/bl.c    **** 
 189:../bl/bl.c    **** uint32_t get_tick_count()
 190:../bl/bl.c    **** {
 946              		.loc 1 190 0
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 0
 949              		@ frame_needed = 1, uses_anonymous_args = 0
 950              		@ link register save eliminated.
 951 0000 80B4     		push	{r7}
 952              		.cfi_def_cfa_offset 4
 953              		.cfi_offset 7, -4
 954 0002 00AF     		add	r7, sp, #0
 955              		.cfi_def_cfa_register 7
 191:../bl/bl.c    **** 	return __timelib_tick_count;
 956              		.loc 1 191 0
 957 0004 044B     		ldr	r3, .L46
 958 0006 D3E90023 		ldrd	r2, [r3]
 959 000a 1346     		mov	r3, r2
 192:../bl/bl.c    **** }
 960              		.loc 1 192 0
 961 000c 1846     		mov	r0, r3
 962 000e BD46     		mov	sp, r7
 963              		.cfi_def_cfa_register 13
 964              		@ sp needed
 965 0010 5DF8047B 		ldr	r7, [sp], #4
 966              		.cfi_restore 7
 967              		.cfi_def_cfa_offset 0
 968 0014 7047     		bx	lr
 969              	.L47:
 970 0016 00BF     		.align	2
 971              	.L46:
 972 0018 00000000 		.word	__timelib_tick_count
 973              		.cfi_endproc
 974              	.LFE9:
 976              		.section	.text.vApplicationTickHook,"ax",%progbits
 977              		.align	2
 978              		.global	vApplicationTickHook
 979              		.thumb
 980              		.thumb_func
 982              	vApplicationTickHook:
 983              	.LFB10:
 193:../bl/bl.c    **** extern inline void vApplicationTickHook(void)
 194:../bl/bl.c    **** {
 984              		.loc 1 194 0
 985              		.cfi_startproc
 986              		@ args = 0, pretend = 0, frame = 0
 987              		@ frame_needed = 1, uses_anonymous_args = 0
 988              		@ link register save eliminated.
 989 0000 80B4     		push	{r7}
 990              		.cfi_def_cfa_offset 4
 991              		.cfi_offset 7, -4
 992 0002 00AF     		add	r7, sp, #0
 993              		.cfi_def_cfa_register 7
 195:../bl/bl.c    **** 	__timelib_tick_count ++;
 994              		.loc 1 195 0
 995 0004 064B     		ldr	r3, .L49
 996 0006 D3E90023 		ldrd	r2, [r3]
 997 000a 0132     		adds	r2, r2, #1
 998 000c 43F10003 		adc	r3, r3, #0
 999 0010 0349     		ldr	r1, .L49
 1000 0012 C1E90023 		strd	r2, [r1]
 196:../bl/bl.c    **** }
 1001              		.loc 1 196 0
 1002 0016 BD46     		mov	sp, r7
 1003              		.cfi_def_cfa_register 13
 1004              		@ sp needed
 1005 0018 5DF8047B 		ldr	r7, [sp], #4
 1006              		.cfi_restore 7
 1007              		.cfi_def_cfa_offset 0
 1008 001c 7047     		bx	lr
 1009              	.L50:
 1010 001e 00BF     		.align	2
 1011              	.L49:
 1012 0020 00000000 		.word	__timelib_tick_count
 1013              		.cfi_endproc
 1014              	.LFE10:
 1016              		.section	.text.delay_ms,"ax",%progbits
 1017              		.align	2
 1018              		.global	delay_ms
 1019              		.thumb
 1020              		.thumb_func
 1022              	delay_ms:
 1023              	.LFB11:
 197:../bl/bl.c    **** 
 198:../bl/bl.c    **** void delay_ms(int ms)
 199:../bl/bl.c    **** {
 1024              		.loc 1 199 0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 16
 1027              		@ frame_needed = 1, uses_anonymous_args = 0
 1028 0000 80B5     		push	{r7, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 7, -8
 1031              		.cfi_offset 14, -4
 1032 0002 84B0     		sub	sp, sp, #16
 1033              		.cfi_def_cfa_offset 24
 1034 0004 00AF     		add	r7, sp, #0
 1035              		.cfi_def_cfa_register 7
 1036 0006 7860     		str	r0, [r7, #4]
 200:../bl/bl.c    **** 	uint32_t t = get_tick_count() + ms;
 1037              		.loc 1 200 0
 1038 0008 FFF7FEFF 		bl	get_tick_count
 1039 000c 0246     		mov	r2, r0
 1040 000e 7B68     		ldr	r3, [r7, #4]
 1041 0010 1344     		add	r3, r3, r2
 1042 0012 FB60     		str	r3, [r7, #12]
 201:../bl/bl.c    **** 	while(t>get_tick_count());
 1043              		.loc 1 201 0
 1044 0014 00BF     		nop
 1045              	.L52:
 1046              		.loc 1 201 0 is_stmt 0 discriminator 1
 1047 0016 FFF7FEFF 		bl	get_tick_count
 1048 001a 0246     		mov	r2, r0
 1049 001c FB68     		ldr	r3, [r7, #12]
 1050 001e 9A42     		cmp	r2, r3
 1051 0020 F9D3     		bcc	.L52
 202:../bl/bl.c    **** }
 1052              		.loc 1 202 0 is_stmt 1
 1053 0022 1037     		adds	r7, r7, #16
 1054              		.cfi_def_cfa_offset 8
 1055 0024 BD46     		mov	sp, r7
 1056              		.cfi_def_cfa_register 13
 1057              		@ sp needed
 1058 0026 80BD     		pop	{r7, pc}
 1059              		.cfi_endproc
 1060              	.LFE11:
 1062              		.section	.text.buzzer_ctrl,"ax",%progbits
 1063              		.align	2
 1064              		.global	buzzer_ctrl
 1065              		.thumb
 1066              		.thumb_func
 1068              	buzzer_ctrl:
 1069              	.LFB12:
 203:../bl/bl.c    **** 
 204:../bl/bl.c    **** void buzzer_ctrl(int en)
 205:../bl/bl.c    **** {
 1070              		.loc 1 205 0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 8
 1073              		@ frame_needed = 1, uses_anonymous_args = 0
 1074              		@ link register save eliminated.
 1075 0000 80B4     		push	{r7}
 1076              		.cfi_def_cfa_offset 4
 1077              		.cfi_offset 7, -4
 1078 0002 83B0     		sub	sp, sp, #12
 1079              		.cfi_def_cfa_offset 16
 1080 0004 00AF     		add	r7, sp, #0
 1081              		.cfi_def_cfa_register 7
 1082 0006 7860     		str	r0, [r7, #4]
 206:../bl/bl.c    **** 	if(en)
 1083              		.loc 1 206 0
 1084 0008 7B68     		ldr	r3, [r7, #4]
 1085 000a 002B     		cmp	r3, #0
 1086 000c 06D0     		beq	.L54
 207:../bl/bl.c    **** 		PTD-> PSOR |= 1<<8;
 1087              		.loc 1 207 0
 1088 000e 094A     		ldr	r2, .L56
 1089 0010 084B     		ldr	r3, .L56
 1090 0012 5B68     		ldr	r3, [r3, #4]
 1091 0014 43F48073 		orr	r3, r3, #256
 1092 0018 5360     		str	r3, [r2, #4]
 1093 001a 05E0     		b	.L53
 1094              	.L54:
 208:../bl/bl.c    **** 	else
 209:../bl/bl.c    **** 		PTD-> PCOR |= 1<<8;
 1095              		.loc 1 209 0
 1096 001c 054A     		ldr	r2, .L56
 1097 001e 054B     		ldr	r3, .L56
 1098 0020 9B68     		ldr	r3, [r3, #8]
 1099 0022 43F48073 		orr	r3, r3, #256
 1100 0026 9360     		str	r3, [r2, #8]
 1101              	.L53:
 210:../bl/bl.c    **** }
 1102              		.loc 1 210 0
 1103 0028 0C37     		adds	r7, r7, #12
 1104              		.cfi_def_cfa_offset 4
 1105 002a BD46     		mov	sp, r7
 1106              		.cfi_def_cfa_register 13
 1107              		@ sp needed
 1108 002c 5DF8047B 		ldr	r7, [sp], #4
 1109              		.cfi_restore 7
 1110              		.cfi_def_cfa_offset 0
 1111 0030 7047     		bx	lr
 1112              	.L57:
 1113 0032 00BF     		.align	2
 1114              	.L56:
 1115 0034 C0F00F40 		.word	1074786496
 1116              		.cfi_endproc
 1117              	.LFE12:
 1119              		.text
 1120              	.Letext0:
 1121              		.file 2 "/home/houxd/prog/NXP/S32DS_ARM_v2.0/S32DS/arm_ewl2/EWL_C/include/cstdint"
 1122              		.file 3 "/home/houxd/workspaceS32DS.ARM.V20/dp1000/include/S32K144.h"
 1123              		.file 4 "/home/houxd/workspaceS32DS.ARM.V20/dp1000/src/timelib.h"
DEFINED SYMBOLS
                            *ABS*:00000000 bl.c
     /tmp/ccNTGnTl.s:21     .text.WDOG_disable:00000000 $t
     /tmp/ccNTGnTl.s:26     .text.WDOG_disable:00000000 WDOG_disable
     /tmp/ccNTGnTl.s:62     .text.WDOG_disable:00000024 $d
     /tmp/ccNTGnTl.s:68     .text.NVIC_init_IRQs:00000000 $t
     /tmp/ccNTGnTl.s:73     .text.NVIC_init_IRQs:00000000 NVIC_init_IRQs
     /tmp/ccNTGnTl.s:132    .text.NVIC_init_IRQs:00000054 $d
     /tmp/ccNTGnTl.s:137    .text.LPIT0_init:00000000 $t
     /tmp/ccNTGnTl.s:142    .text.LPIT0_init:00000000 LPIT0_init
     /tmp/ccNTGnTl.s:191    .text.LPIT0_init:00000040 $d
     /tmp/ccNTGnTl.s:197    .text.PORT_init:00000000 $t
     /tmp/ccNTGnTl.s:202    .text.PORT_init:00000000 PORT_init
     /tmp/ccNTGnTl.s:524    .text.PORT_init:0000029c $d
     /tmp/ccNTGnTl.s:536    .text.PORT_init:000002c4 $t
     /tmp/ccNTGnTl.s:608    .text.PORT_init:00000354 $d
     /tmp/ccNTGnTl.s:619    .text.rs485_dir:00000000 $t
     /tmp/ccNTGnTl.s:624    .text.rs485_dir:00000000 rs485_dir
     /tmp/ccNTGnTl.s:671    .text.rs485_dir:00000034 $d
     /tmp/ccNTGnTl.s:676    .text.get_input_val:00000000 $t
     /tmp/ccNTGnTl.s:681    .text.get_input_val:00000000 get_input_val
     /tmp/ccNTGnTl.s:753    .text.get_input_val:00000058 $d
     /tmp/ccNTGnTl.s:759    .text.led_ctrl:00000000 $t
     /tmp/ccNTGnTl.s:764    .text.led_ctrl:00000000 led_ctrl
     /tmp/ccNTGnTl.s:820    .text.led_ctrl:00000044 $d
     /tmp/ccNTGnTl.s:825    .text.power_ctrl:00000000 $t
     /tmp/ccNTGnTl.s:830    .text.power_ctrl:00000000 power_ctrl
     /tmp/ccNTGnTl.s:877    .text.power_ctrl:00000034 $d
     /tmp/ccNTGnTl.s:882    .text.powec_ctrl:00000000 $t
     /tmp/ccNTGnTl.s:887    .text.powec_ctrl:00000000 powec_ctrl
     /tmp/ccNTGnTl.s:934    .text.powec_ctrl:00000034 $d
     /tmp/ccNTGnTl.s:939    .text.get_tick_count:00000000 $t
     /tmp/ccNTGnTl.s:944    .text.get_tick_count:00000000 get_tick_count
     /tmp/ccNTGnTl.s:972    .text.get_tick_count:00000018 $d
     /tmp/ccNTGnTl.s:977    .text.vApplicationTickHook:00000000 $t
     /tmp/ccNTGnTl.s:982    .text.vApplicationTickHook:00000000 vApplicationTickHook
     /tmp/ccNTGnTl.s:1012   .text.vApplicationTickHook:00000020 $d
     /tmp/ccNTGnTl.s:1017   .text.delay_ms:00000000 $t
     /tmp/ccNTGnTl.s:1022   .text.delay_ms:00000000 delay_ms
     /tmp/ccNTGnTl.s:1063   .text.buzzer_ctrl:00000000 $t
     /tmp/ccNTGnTl.s:1068   .text.buzzer_ctrl:00000000 buzzer_ctrl
     /tmp/ccNTGnTl.s:1115   .text.buzzer_ctrl:00000034 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.728a2e6911dc01ff85c2d70c52e8fae1
                           .group:00000000 wm4.lib_c99.prefix.8.3580c292f50811c682d980dc4180498e
                           .group:00000000 wm4.common.prefix.16.d7bf937cdf46fd76dde96b376e3b328a
                           .group:00000000 wm4.ewl_c_version.h.9.0bcb57d6a3f89baae1f9b121de2772f5
                           .group:00000000 wm4.os_enum.h.9.f9446d6af68b3fa72a37d4d924d3b347
                           .group:00000000 wm4.ansi_prefix.ARM.h.13.4b23f4c654df3c3277534542f67d200c
                           .group:00000000 wm4.ansi_parms.h.64.90aed58330fdde08746db908036e1f37
                           .group:00000000 wm4.limits_api.h.9.bc6daa20b3abae2bba6c512044e73b43
                           .group:00000000 wm4.ewl_lib_ext1.h.14.f9b057cc049671136093886db2a3473f
                           .group:00000000 wm4.cstdint.134.0ece0ba0ee759ce9e45a8fa510ec0d93
                           .group:00000000 wm4.wchar_t.h.9.94198016f5b5f455e54ea1f3f054b416
                           .group:00000000 wm4.cstdint.246.0573fcc3ea2319479988f90b448d87e4
                           .group:00000000 wm4.bl.h.17.b619f0597fd83ead838435dcdbf2cdad
                           .group:00000000 wm4.S32K144.h.177.db9d6057c342cdeacc7fa44375c761e5
                           .group:00000000 wm4.SPI_MSD0_Driver.h.10.751670d7185e24a2b9b7290d36663748
                           .group:00000000 wm4.size_t.h.9.f983491a73b5c81f421ee8223b1ac5c0
                           .group:00000000 wm4.ewl_rsize_t.h.11.b283831bb803e76ceb1756da2df9a1b5
                           .group:00000000 wm4.cstddef.32.067e2ea187472b6198f9ace951e27a51
                           .group:00000000 wm4.va_list.h.9.b0bb078841c0305c2667a31da10a9070
                           .group:00000000 wm4.file_struc.h.13.96d07f4b7392ecdee9ce60307cac6248
                           .group:00000000 wm4.stdarg.ARM.h.9.32516e68edcca81ab31f48f233894821
                           .group:00000000 wm4.stdio_api.h.64.7d83b1caa7fdc34505042751a1c33692
                           .group:00000000 wm4.cstdio.1187.51197b0e8ec7388017461af9f7851efe
                           .group:00000000 wm4.timelib.h.9.511fe5beaa07f6d0465e284d0d8ae8e6

UNDEFINED SYMBOLS
nic_io_init
ds3231_init
__timelib_tick_count
